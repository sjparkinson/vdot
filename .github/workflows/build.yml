name: Build

on: push

defaults:
  run:
    shell: bash

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      
      - uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: rustup toolchain install stable --component clippy

      - run: cargo clippy

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: rustup toolchain install stable --component rustfmt

      - run: cargo fmt --all -- --check

  build:
    name: Build
    strategy:
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
          - windows-latest
        include:
          - os: macOS-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    env:
      CARGO_BUILD_TARGET: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      
      - uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install apt packages
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: sudo apt install musl-tools

      - run: rustup toolchain install stable --target "${{ matrix.target }}"

      - name: Update the version in Cargo.toml
        run: perl -i -pe "s/\"([^ ]*)\"/\"\1-main+${GITHUB_SHA:0:7}\"/ if $.==4" Cargo.toml

      - run: cargo test

      - run: cargo build

      - name: Upload macOS and linux artifacts
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest' }}
        uses: actions/upload-artifact@v2
        with:
          name: vdot-${{ matrix.target }}
          path: target/${{ matrix.target }}/debug/vdot

      - name: Upload Windows artifacts
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v2
        with:
          name: vdot-${{ matrix.target }}
          path: target/${{ matrix.target }}/debug/vdot.exe
