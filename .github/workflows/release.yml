name: Release

on:
  release:
    types:
      - published

defaults:
  run:
    shell: bash

jobs:
  github:
    strategy:
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
          - windows-latest
        include:
          - os: macOS-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    env:
      CARGO_BUILD_TARGET: ${{ matrix.target }}

    runs-on: "${{ matrix.os }}"

    outputs:
      sha256_macos: ${{ steps.sha256_macos.outputs.sha256 }}
      sha256_linux: ${{ steps.sha256_linux.outputs.sha256 }}

    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Get the git tag
        id: tag
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

      - name: Update the version in Cargo.toml
        run: perl -i -pe "s/version = \".+\"/version = \"${GITHUB_REF/refs\/tags\/v/}\"/ if $.==4" Cargo.toml

      - name: Install apt packages
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install musl-tools

      - run: rustup toolchain install stable --target "${{ matrix.target }}"

      - run: cargo build --release

      - name: Compress macOS and linux artifacts
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'
        run: |
          cp target/${{ matrix.target }}/release/vdot .
          zip -9 "target/vdot-${{ steps.tag.outputs.tag }}-${{ matrix.target }}.zip" vdot README.md LICENSE

      - name: Compress Windows artifacts
        if: matrix.os == 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/vdot.exe .
          7z a "target/vdot-${{ steps.tag.outputs.tag }}-${{ matrix.target }}.zip" vdot.exe README.md LICENSE

      - name: Calculate the sha256 of the macOS binary
        if: matrix.os == 'macOS-latest'
        id: sha256_macos
        run: |
          echo ::set-output name=sha256::$(openssl dgst -sha256 "target/vdot-${{ steps.tag.outputs.tag }}-${{ matrix.target }}.zip" | cut -d ' ' -f 2)

      - name: Calculate the sha256 of the linux binary
        if: matrix.os == 'ubuntu-latest'
        id: sha256_linux
        run: |
          echo ::set-output name=sha256::$(openssl dgst -sha256 "target/vdot-${{ steps.tag.outputs.tag }}-${{ matrix.target }}.zip" | cut -d ' ' -f 2)

      - name: Upload artifacts to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/vdot-${{ steps.tag.outputs.tag }}-${{ matrix.target }}.zip
          asset_name: vdot-${{ steps.tag.outputs.tag }}-${{ matrix.target }}.zip
          asset_content_type: application/zip

  cargo:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - name: Update the version in Cargo.toml
        run: perl -i -pe "s/version = \".+\"/version = \"${GITHUB_REF/refs\/tags\/v/}\"/ if $.==4" Cargo.toml

      - run: cargo publish --no-verify --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Commit the changes
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "chore: update Cargo crate to ${GITHUB_REF/refs\/tags\//}"
          git push

  homebrew:
    runs-on: ubuntu-latest

    needs: github

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - name: Update the formula version
        run: perl -i -pe "s/version \".+\"/version \"${GITHUB_REF/refs\/tags\/v/}\"/ if $.==15" vdot.rb

      - name: Update the macOS hash
        run: perl -i -pe "s/sha256 \".+\"/sha256 \"${{ needs.github.outputs.sha256_macos }}\"/ if $.==19" vdot.rb

      - name: Update the linux hash
        run: perl -i -pe "s/sha256 \".+\"/sha256 \"${{ needs.github.outputs.sha256_linux }}\"/ if $.==22" vdot.rb

      - name: Commit the changes
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "chore: update Homebrew formula to ${GITHUB_REF/refs\/tags\//}"
          git push
